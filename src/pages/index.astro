---
import { Image } from "astro:assets";
import BaseLayout from "../layouts/BaseLayout.astro";
import { RiArrowRightLine } from "react-icons/ri";
import illustration from "./_images/namesake-form.png";
import formIllustration from "./_images/form-snail.png";
---

<BaseLayout
  title="Namesake"
  description="Namesake streamlines the legal name and gender marker change process for trans, nonbinary, and gender expansive folks."
>
  <div class="home">
    <Image
      class="illustration"
      src={illustration}
      alt="Some snails and flowers on top of a court order document"
      width={600}
      densities={[1, 2]}
    />
    <div class="content">
      <h1>
        <span>Be seen for</span><br /><span class="who-you-are"
          >who you are.</span
        >
      </h1>
      <div class="subhead">
        <p>
          <strong>Legally changing name and gender is a challenge.</strong> You have
          to navigate the courts, fill out dense paperwork, and tackle steps in a
          specific and poorly-communicated order. For some, the process can take
          years to complete. And you have to do it all while navigating big emotions
          around what it means to embrace a new identity.
        </p>
        <p>
          We’ve been through this process ourselves, and we think it can be
          better. We built Namesake to help you navigate the process, step by
          step, with community support along the way.
        </p>
        <p>
          We’re finishing up the app right now and we plan to launch this
          Summer, starting in Massachusetts.
        </p>
        <p>
          Rigid systems weren’t built for us, but <span class="figure-it-out"
            >we’ll figure them out together.</span
          >
        </p>
      </div>
      <form>
        <Image
          class="form-illustration"
          src={formIllustration}
          alt="A snail moving to the left"
          width={240}
          densities={[1, 2]}
        />
        <strong>Get notified when we launch:</strong>
        <div class="input-group">
          <input type="email" name="email" placeholder="Your email" required />
          <button type="submit">Subscribe <RiArrowRightLine /></button>
        </div>
      </form>
    </div>
  </div>
</BaseLayout>

<script>
  import { annotate } from "rough-notation";

  const whoYouAre: HTMLElement | null = document.querySelector(".who-you-are");
  if (whoYouAre) {
    const highlight = annotate(whoYouAre, {
      type: "highlight",
      iterations: 1,
    });
    highlight.show();
  }

  const figureItOut: HTMLElement | null =
    document.querySelector(".figure-it-out");
  if (figureItOut) {
    const underline = annotate(figureItOut, {
      type: "underline",
      multiline: true,
      iterations: 1,
      padding: 1,
      animate: false,
    });
    underline.show();
  }
</script>

<style lang="scss">
  .home {
    display: grid;
    grid-template-columns: minmax(460px, 1fr) minmax(0, 1fr);
    gap: var(--space-2xl);

    @media (width < 800px) {
      display: block;

      .illustration {
        display: none;
      }
    }
  }

  img {
    width: 600px;
    max-width: 100%;
    order: 1;
  }

  h1 {
    margin-block-end: var(--space-xl);
    margin-inline-start: -0.03em;

    span {
      white-space: nowrap;
    }
  }

  .who-you-are {
    color: var(--bg-purple);
  }

  .subhead {
    font-size: var(--step-1);

    p + p {
      margin-top: var(--space-l);
    }
  }

  form {
    color: var(--bg-purple);
    background-color: var(--text);
    margin-block-start: var(--space-3xl);
    padding: var(--space-l) var(--space-m);
    position: relative;

    @media (width < 540px) {
      width: 100%;
    }

    .form-illustration {
      width: 120px;
      position: absolute;
      bottom: calc(100% - 4px);
      right: 20px;
    }
  }

  .input-group {
    display: flex;
    gap: var(--space-xs);
    margin-block-start: var(--space-s);
    flex: 1;
  }

  input,
  button {
    border: none;
    background: var(--bg-purple);
    border-radius: var(--radius-s);
    color: var(--text);
    padding: var(--space-s) var(--space-s);
  }

  input {
    flex: 1;

    &::placeholder {
      color: var(--text-placeholder);
    }

    &:focus {
      background-color: var(--white);
    }
  }

  button {
    font-weight: 600;
    flex-shrink: 0;
    cursor: pointer;
    display: inline-flex;
    gap: var(--space-2xs);
    align-items: center;
    padding-inline: var(--space-m);

    @media (hover: hover) {
      &:hover {
        background: var(--white);
      }
    }

    &:focus-visible {
      background: var(--white);
    }
  }
</style>
