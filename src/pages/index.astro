---
import { Image } from "astro:assets";
import BaseLayout from "../layouts/BaseLayout.astro";
import { RiArrowRightLine } from "react-icons/ri";
import illustration from "./_images/namesake-form.png";
import formIllustration from "./_images/form-snail.png";
import { getCollection } from "astro:content";
import siteInfo from "../data/site-info";

const partners = await getCollection("partners");
const shuffledPartners = partners.sort(() => 0.5 - Math.random());
---

<BaseLayout title={siteInfo.name} description={siteInfo.description}>
  <div class="home">
    <Image
      class="illustration"
      src={illustration}
      alt="Some snails and flowers on top of a court order document"
      width={600}
      densities={[1, 2]}
    />
    <div class="content">
      <h1>
        <span>Be seen for</span><br /><span class="who-you-are"
          >who you are.</span
        >
      </h1>
      <div class="subhead">
        <p>
          <strong>It’s tough to change your legal name and gender.</strong> There’s
          loads of paperwork. You have to dig up your birth certificate, find a notary,
          show up at a courthouse, and pay filing fees… and that’s just the first
          step. Then comes updating your ID, social security, banks, schools, and
          a hundred other places.
        </p>
        <p>
          <strong>We think it can be easier.</strong> We’re a trans-led team with
          years of experience running name change clinics. We’re building a digital
          platform for clear, step-by-step name change guidance and community support,
          for free.
        </p>
        <p>
          <strong
            >The new Namesake app will launch in Massachusetts later this
            summer, with other states to follow.</strong
          >
          <a href={siteInfo.socialLinks.discord.href}>Join us on Discord</a> to get
          early access.
        </p>
        <p>
          Rigid systems weren’t built for us, but we’ll figure them out
          together.
        </p>
      </div>
      <form>
        <Image
          class="form-illustration"
          src={formIllustration}
          alt="A snail moving to the left"
          width={240}
          densities={[1, 2]}
        />
        <strong>Get notified when we launch:</strong>
        <div class="input-group">
          <input type="email" name="email" placeholder="Your email" required />
          <button type="submit">Subscribe <RiArrowRightLine /></button>
        </div>
      </form>
    </div>
    <div class="partners">
      <h2>In partnership with</h2>
      <ul>
        {
          shuffledPartners.map((partner) => (
            <li>
              <a
                href={partner.data.url}
                target="_blank"
                rel="noopener noreferrer"
                aria-label={`Visit ${partner.data.name}`}
              >
                <Image
                  src={partner.data.logo}
                  alt={partner.data.name}
                  height={partner.data.height}
                />
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</BaseLayout>

<script>
  import { annotate } from "rough-notation";

  const whoYouAre: HTMLElement | null = document.querySelector(".who-you-are");
  if (whoYouAre) {
    const highlight = annotate(whoYouAre, {
      type: "highlight",
      iterations: 1,
    });
    highlight.show();
  }

  const partners: HTMLElement | null = document.querySelector(".partners h2");
  if (partners) {
    const brackets = annotate(partners, {
      type: "underline",
      animate: false,
    });
    brackets.show();
  }
</script>

<style lang="scss">
  .home {
    display: grid;
    grid-template-columns: minmax(460px, 1fr) minmax(0, 1fr);
    grid-template-rows: 1fr auto;
    grid-template-areas:
      "content illustration"
      "partners partners";
    gap: var(--space-2xl);

    @media (width < 800px) {
      grid-template-columns: 1fr;
      grid-template-areas:
        "content"
        "partners";

      .illustration {
        display: none;
      }
    }
  }

  .illustration {
    grid-area: illustration;
    width: 600px;
    max-width: 100%;
    order: 1;
  }

  img {
    mix-blend-mode: multiply;
    user-select: none;
  }

  .content {
    grid-area: content;
    min-width: 0;
  }

  .partners {
    grid-area: partners;
    display: flex;
    align-items: center;
    flex-direction: column;
    margin-inline: auto;
    width: 100%;
    overflow: hidden;
    gap: var(--space-2xl);
    padding-block: var(--space-2xl);

    h2 {
      font-size: var(--step-1);
    }

    ul {
      list-style-type: none;
      margin: 0;
      padding: 0;
      max-width: 100%;
      display: grid;
      justify-items: center;
      align-items: center;
      grid-template-columns: repeat(3, 240px);
      grid-auto-rows: 80px;
      gap: var(--space-l) var(--space-2xl);

      @media (width < 900px) {
        grid-template-columns: repeat(2, minmax(240px, 1fr));
      }

      @media (width < 600px) {
        grid-template-columns: repeat(2, 1fr);
      }

      img {
        max-width: min(240px, 40vw);
      }
    }
  }

  h1 {
    margin-block-end: var(--space-xl);
    margin-inline-start: -0.03em;

    span {
      white-space: nowrap;
    }
  }

  .who-you-are {
    color: var(--bg-purple);
  }

  .subhead {
    font-size: var(--step-1);

    p + p {
      margin-top: var(--space-l);
    }
  }

  form {
    color: var(--bg-purple);
    background-color: var(--text);
    margin-block-start: var(--space-3xl);
    padding: var(--space-l) var(--space-m);
    position: relative;
    border-radius: 2px;

    @media (width < 540px) {
      width: 100%;
    }

    .form-illustration {
      width: 120px;
      position: absolute;
      bottom: calc(100% - 4px);
      right: 20px;
    }
  }

  .input-group {
    max-width: 100%;
    display: flex;
    gap: var(--space-xs);
    margin-block-start: var(--space-s);
  }

  input,
  button {
    border: none;
    background: var(--bg-purple);
    border-radius: var(--radius-2xs);
    color: var(--text);
    padding: var(--space-s) var(--space-s);
  }

  input {
    flex: 1;
    min-width: 0;

    &::placeholder {
      color: var(--text-placeholder);
    }
  }

  button {
    font-weight: 600;
    flex-shrink: 0;
    cursor: pointer;
    display: inline-flex;
    gap: var(--space-2xs);
    align-items: center;
    padding-inline: var(--space-m);
  }
</style>
