---
import { Image } from "astro:assets";
import BaseLayout from "../../layouts/BaseLayout.astro";

import { getCollection, getEntries, type CollectionEntry } from "astro:content";

export interface Props {
  post: CollectionEntry<"posts">;
}

export async function getStaticPaths() {
  const publishedPosts = await getCollection("posts", ({ data }) => {
    return data.isDraft !== true;
  });

  return publishedPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;

const { data, render } = post;
const { Content } = await render();

const authors = await getEntries(data.authors);
---

<BaseLayout title={data.title} description="Updates and news from Namesake.">
  <header class="post-header">
    <h1>{data.title}</h1>
    <div class="authors">
      <span>By</span>
      {
        authors.map((author) => (
          <span class="author">
            {author.data.avatar && (
              <Image
                class="avatar"
                src={author.data.avatar}
                alt={`${author.data.name} photo`}
                width={40}
              />
            )}
            {author.data.name}
          </span>
        ))
      }
      <time datetime={post.data.publishDate.toISOString()}
        >{data.publishDate.toDateString()}</time
      >
    </div>
  </header>
  <div class="prose">
    <Content />
  </div>
</BaseLayout>

<style lang="scss">
  .post-header {
    display: flex;
    flex-direction: column;
    gap: var(--space-m);
    padding-bottom: var(--space-3xl);
  }

  .authors {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s);
    font-size: var(--step-1);
    align-items: center;
  }

  .author {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);

    font-weight: 600;
  }

  .avatar {
    filter: grayscale(100%) contrast(1.3);
    border-radius: 100%;
  }

  .prose {
    p + p {
      margin-top: var(--space-m);
    }
  }
</style>
