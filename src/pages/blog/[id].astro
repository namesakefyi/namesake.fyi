---
import { Image } from "astro:assets";
import {
  type CollectionEntry,
  getCollection,
  getEntries,
  render,
} from "astro:content";
import ProseLayout from "~/layouts/ProseLayout.astro";

export interface Props {
  post: CollectionEntry<"posts">;
}

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;

if (!post) return Astro.redirect("/404");

const { data } = post;
const { Content, headings } = await render(post);

const authors = data.authors ? await getEntries(data.authors) : [];
---

<ProseLayout
  title={data.title}
  date={data.publishDate}
  description={data.description}
  color="blue"
  annotation={data.annotation ?? "highlight"}
  headings={headings}
>
  {
    authors.length > 0 && (
      <div class="authors" slot="after-header">
        {authors.map((author) => (
          <span class="author">
            {author.data.avatar && (
              <Image
                class="avatar"
                src={author.data.avatar}
                alt={`${author.data.name} photo`}
                width={32}
                densities={[1, 2]}
              />
            )}
            <div class="author-info">
              <strong>{author.data.name}</strong>
              <span class="role">{author.data.role}</span>
            </div>
          </span>
        ))}
      </div>
    )
  }
  <Content />
  <div class="bios" slot="after-content">
    {
      authors.map(({ data: { avatar, name, bio, socialLinks } }) => (
        <div class="bio">
          <div class="bio-avatar">
            <Image
              class="avatar"
              src={avatar}
              alt={`${name} photo`}
              width={80}
              height={80}
              densities={[1, 2]}
            />
          </div>
          <div class="content">
            <strong>{name}</strong>
            <p>{bio}</p>
            {socialLinks && socialLinks.length > 0 && (
              <ul class="social">
                {socialLinks.map((socialLink) => (
                  <li>
                    <a href={socialLink.url} target="_blank">
                      {socialLink.name}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        </div>
      ))
    }
  </div>
</ProseLayout>

<style lang="scss">
  .authors {
    display: flex;
    flex-direction: column;
    gap: var(--space-s);
    padding-bottom: var(--space-2xl);
  }

  .author {
    display: inline-flex;
    align-items: center;
    gap: var(--space-s);

    .author-info {
      display: inline-flex;
      align-items: baseline;
      gap: var(--space-xs);

      @media (width <= 600px) {
        flex-direction: column;
        gap: 0;
      }
    }

    .role {
      font-size: var(--step--1);
    }
  }

  .avatar {
    border-radius: 100%;
    filter: grayscale(100%);
    mix-blend-mode: multiply;
    transform: translate3d(0, 0, 0);
    user-select: none;
  }

  .bio-avatar {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    overflow: hidden;
    border-radius: 100%;
  }

  .bios {
    display: flex;
    flex-direction: column;
    gap: var(--space-xl);
    margin-block-start: var(--space-3xl);
  }

  .bio {
    max-width: 720px;
    display: flex;
    align-items: flex-start;
    gap: var(--space-m);

    .content {
      display: flex;
      flex-direction: column;
      gap: var(--space-xs);
    }
  }

  .social {
    list-style-type: none;
    display: flex;
    padding: 0;
    gap: var(--space-s);
  }
</style>
