---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

const partners = await getCollection("partners");
const shuffledPartners = partners.sort(() => 0.5 - Math.random());
---

<div class="partners">
  <h2>In partnership with</h2>
  <ul>
    {
      shuffledPartners.map((partner) => (
        <li>
          <a
            href={partner.data.url}
            target="_blank"
            rel="noopener noreferrer"
            aria-label={`Visit ${partner.data.name}`}
          >
            <Image
              src={partner.data.logo}
              alt={partner.data.name}
              height={partner.data.height}
              densities={[1, 2]}
            />
          </a>
        </li>
      ))
    }
  </ul>
</div>

<script>
  import { annotate } from "rough-notation";

  const partners: HTMLElement | null = document.querySelector(".partners h2");
  if (partners) {
    const underline = annotate(partners, {
      type: "circle",
      padding: 16,
      animate: false,
    });
    underline.show();
  }
</script>

<style lang="scss">
  .partners {
    display: flex;
    align-items: center;
    flex-direction: column;
    margin-inline: auto;
    width: 100%;
    overflow: hidden;
    gap: var(--space-3xl);
    padding-block: var(--space-xl);
    margin-block-start: var(--space-3xl);

    h2 {
      font-size: var(--step-1);
    }

    ul {
      list-style-type: none;
      margin: 0;
      padding: 0;
      max-width: 100%;
      display: grid;
      justify-items: center;
      align-items: center;
      grid-template-columns: repeat(3, 240px);
      grid-auto-rows: 80px;
      gap: var(--space-l) var(--space-xl);
      user-select: none;

      @media (width < 900px) {
        grid-template-columns: repeat(2, minmax(240px, 1fr));
      }

      @media (width < 600px) {
        grid-template-columns: repeat(2, 1fr);
      }

      a {
        display: inline-block;
      }

      img {
        max-width: min(240px, 40vw);
      }
    }
  }
</style>
